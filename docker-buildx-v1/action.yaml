name: Docker Buildx v1
description: Build and push Docker images using Buildx
inputs:
  container_repository:
    description: Repository for Image Build and Storage.
    required: true
  registry:
    description: Container Image Registry for Authentication.
    required: true
  registry_username:
    description: Container Image Registry Username.
    required: true
  registry_password:
    description: Container Image Registry Password.
    required: true
  build_context:
    description: Path to the Dockerfile.
    default: .
  build_args:
    description: Build arguments for the Dockerfile.
    default: ""
  docker_push:
    description: Activate if you want to push the image to the registry.
    required: true
    default: "true"
  arch:
    description: Build platforms for Docker image build.
    default: linux/amd64,linux/arm64
    required: true

outputs: { }

runs:
  using: composite
  steps:
  -
    name: Checkout
    uses: actions/checkout@v4
  - 
    name: Docker meta
    id: meta
    uses: docker/metadata-action@v5
    with:
      # list of Docker images to use as base name for tags
      images: |
        ${{ inputs.container_repository }}          
      # generate Docker tags based on the following events/attributes
      tags: |
        type=schedule
        type=ref,event=branch
        type=ref,event=pr
        type=semver,pattern={{raw}}
        type=semver,pattern={{version}}
        type=semver,pattern={{major}}.{{minor}}
        type=semver,pattern={{major}}
        type=sha,enable=true,priority=100,prefix=,suffix=,format=short
  -
    name: Set up QEMU
    uses: docker/setup-qemu-action@v3
  - 
    name: Log in to the Container registry
    uses: docker/login-action@v3
    with:
      registry: ${{ inputs.registry }}
      username: ${{ inputs.registry_username }}
      password: ${{ inputs.registry_password }}
  -
    name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v3
  -
    name: Build and push
    uses: docker/build-push-action@v6
    with:
      context: ${{ inputs.build_context }}
      platforms: ${{ inputs.arch }}
      push: ${{ inputs.docker_push }} # ${{ github.event_name != 'pull_request' }}
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      build-args: ${{ inputs.build_args }}
      cache-from: type=gha
      cache-to: type=gha,mode=max
